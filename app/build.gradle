apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

def getGitHash = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

android {
    // Travis update separately
    compileSdkVersion 29
    buildToolsVersion '29.0.2'

    defaultConfig {
        applicationId "com.atrainingtracker"
        minSdkVersion 16
        targetSdkVersion 29
        multiDexEnabled true
        versionName "4.2.2"
        versionCode 212
    }

    signingConfigs {
        //noinspection GroovyMissingReturnStatement
        release {
            // storeFile file('/home/rainer/Dropbox/workspace/keystore')
            // keyAlias "aTrainingTrackerReleaseKey"
        }
    }

    buildTypes {
        debug {
            // Separate the debug build
            applicationIdSuffix ".debug"
            versionNameSuffix "-${getGitHash()}"
        }
        release {
            applicationIdSuffix ""

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            signingConfig signingConfigs.release
            zipAlignEnabled true
            debuggable false
        }
    }

    lintOptions {
        //Configure checks with paths
        //lintConfig file("lint.xml")
        baseline file("lint-baseline.xml")
        checkReleaseBuilds true
        // TODO Some dependencies conflicts with Android included
        disable 'DuplicatePlatformClasses'

        showAll true
        //debug issues in Travis
        textReport true
        textOutput 'stdout'
    }

    packagingOptions {
        pickFirst 'META-INF/NOTICE.txt'
        pickFirst 'META-INF/NOTICE'
        pickFirst 'META-INF/DEPENDENCIES'
        pickFirst 'META-INF/LICENSE.txt'
        pickFirst 'META-INF/LICENSE'
    }

    useLibrary 'org.apache.http.legacy'

    dexOptions {
        javaMaxHeapSize "8g"
        preDexLibraries = false
    }
}

dependencies {
    implementation files('libs/commons-codec-1.6.jar')
    implementation files('libs/commons-io-2.4.jar')
    implementation files('libs/commons-logging-1.1.3.jar')
    implementation files('libs/fluent-hc-4.3.1.jar')
    implementation files('libs/httpclient-4.3.1.jar')
    implementation files('libs/httpclient-cache-4.3.1.jar')
    implementation files('libs/httpcore-4.3.jar')
    implementation files('libs/httpmime-4.3.1.jar')

    implementation files('libs/json_simple-1.1.jar')
    implementation files('libs/pebblekit-3.0.0-eclipse.jar')
    implementation files('libs/antpluginlib_3-5-0.jar')

    implementation 'androidx.preference:preference:1.1.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'com.google.android.material:material:1.1.0-beta01'
    implementation 'com.google.android.gms:play-services-maps:17.0.0'
    implementation 'com.google.android.gms:play-services-location:17.0.0'
    // compile 'com.google.android.gms:play-services-auth:10.0.1'

    // compile('com.crashlytics.sdk.android:crashlytics:2.9.1@aar') {
    //   transitive = true
    // }
    implementation 'com.google.firebase:firebase-core:17.2.0'

    implementation 'com.dropbox.core:dropbox-core-sdk:3.1.1'

    implementation 'com.squareup.okhttp3:okhttp:3.10.0'
    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.0.0'
}

apply plugin: 'com.google.gms.google-services'

def props = new Properties()
if (rootProject.file("release.properties").exists()) {
    props.load(new FileInputStream(rootProject.file("release.properties")))

    android.signingConfigs.release.storeFile rootProject.file(props.keyStore)
    android.signingConfigs.release.storePassword props.keyStorePassword
    android.signingConfigs.release.keyAlias props.keyAlias
    android.signingConfigs.release.keyPassword props.keyAliasPassword
} else {
    project.logger.info('INFO: Set the values storeFile, storePassword, keyAlias, and keyPassword in release.properties to sign the release.')
    android.buildTypes.release.signingConfig = null
}
